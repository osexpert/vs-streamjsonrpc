parameters:
- name: windowsPool
  type: string
  default: Hosted Windows 2019 with VS2019
- name: ShouldSkipOptimize

jobs:
- job: Windows
  pool: ${{ parameters.windowsPool }}
  steps:
  - checkout: self
    clean: true

  - ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
    - template: schedule-only-steps.yml

  - template: install-dependencies.yml

  - powershell: '& (./azure-pipelines/Get-nbgv.ps1) cloud'
    displayName: Set build number

  - ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    - template: microbuild.before.yml
      parameters:
        ShouldSkipOptimize: ${{ parameters.ShouldSkipOptimize }}

  - template: dotnet.yml

  - ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
    - template: microbuild.after.yml

- job: Linux
  condition: ne(variables['OptProf'], 'true')
  pool:
    vmImage: Ubuntu 18.04
  steps:
  - checkout: self
    clean: true
  - template: install-dependencies.yml
  - template: dotnet.yml

- job: macOS
  condition: ne(variables['OptProf'], 'true')
  pool:
    vmImage: macOS-10.15
  steps:
  - checkout: self
    clean: true
  - template: install-dependencies.yml
  - template: dotnet.yml

- job: WrapUp
  dependsOn:
  - Windows
  - Linux
  - macOS
  pool:
    vmImage: Ubuntu 18.04
  condition: ne(variables['OptProf'], 'true')
  steps:
  - checkout: self
    clean: true
  - template: install-dependencies.yml
    parameters:
      initArgs: -NoRestore
  - template: publish-codecoverage.yml
  - template: publish-deployables.yml
