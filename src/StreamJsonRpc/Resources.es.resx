<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>La lectura y escritura son NULL.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Recibió una solicitud para ejecutar "{0}", pero no hay ningún objeto de devolución de llamada. Anulando la solicitud.</value>
    <comment>{0} is the method name to execute.</comment>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Error al escribir el resultado de JSON RPC: {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Error al deserializar '{0}' de JSON RPC entrante: {1}</value>
    <comment>{0} is the JSON RPC, {1} is the exception message.</comment>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>JSON RPC no debe ser NULL.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} tiene los parámetros out o ref no admitidos</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0} parámetro(s) (se excluirá cualquier CancellationToken): {1}, pero la solicitud suministra {2}</value>
    <comment>{0} is the method signature, {1} is the method parameter count, {2} is the request parameter count.</comment>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Los parámetros {0} no son compatibles con la solicitud: {1}</value>
    <comment>{0} is the method signature, {1} is the error message.</comment>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Se alcanzó el final de la secuencia.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Error al leer JSON RPC desde la secuencia con {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>La respuesta no es un error.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Se ha eliminado la secuencia</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>La tarea no está completada.</value>
  </data>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>La tarea se canceló.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>No se puede encontrar el método '{0}/{1}' en {2} por las siguientes razones: {3}</value>
    <comment>{0} is the method name, {1} is arity, {2} is target class full name, {3} is the error list.</comment>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Error inesperado al procesar '{0}' de JSON RPC: {1}</value>
    <comment>{0} is the json, {1} is the exception message.</comment>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>No se reconoce '{0}' de JSON RPC entrante</value>
    <comment>{0} is the json.</comment>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>No se pudo analizar el encabezado Content-Length en un número entero positivo.</value>
    <comment>{locked="Content-Length"}</comment>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>El tamaño del encabezado del mensaje supera el tamaño máximo admitido.</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Token inesperado (token) '{0}' al analizar el encabezado.</value>
    <comment>{0} is the token, which is typically a single character.</comment>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Se requiere un número entero positivo.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>El búfer está vacío. Llame primero al método asincrónico para llenarlo.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Se requiere un número entero no negativo.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Los parámetros {0} y {1} superan la longitud de la matriz.</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>La secuencia debe poderse leer.</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>La secuencia debe poderse escribir.</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Esta operación no se permite después de que se haya iniciado la escucha de mensajes.</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Esta operación no se permite antes de que se haya iniciado la escucha de mensajes.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>El parámetro no tiene la forma de un único objeto</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Todas las sobrecargas e invalidaciones del método "{0}" deben compartir un valor común para {1}.{2}.</value>
    <comment>{0} is the method name, {1} is the attribute name, {2} is the attribute property name.</comment>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Los métodos .NET "{0}" y "{1}" no pueden asignar ambos el mismo nombre de método de solicitud: "{2}".</value>
    <comment>{0} is the first method name, {1} is the second method name, {2} is the attribute property value.</comment>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>No se encontró ningún método con el nombre "{0}".</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>Ya se ha registrado un método con el mismo nombre y parámetros equivalentes.</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>Se debe proporcionar un objeto de destino si, y solo si, el método no es estático.</value>
    <comment>"static" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>Primero debe iniciarse la escucha.</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>Esto no se puede hacer una vez que haya iniciado la escucha.</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>Se lanzó una excepción fatal desde el método del servidor {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message</comment>
  </data>
</root>