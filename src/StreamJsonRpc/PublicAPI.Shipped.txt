StreamJsonRpc.BadRpcHeaderException
StreamJsonRpc.BadRpcHeaderException.BadRpcHeaderException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
StreamJsonRpc.DisconnectedReason
StreamJsonRpc.DisconnectedReason.FatalException = 4 -> StreamJsonRpc.DisconnectedReason
StreamJsonRpc.HeaderDelimitedMessageHandler
StreamJsonRpc.HeaderDelimitedMessageHandler.HeaderDelimitedMessageHandler(System.IO.Stream sendingStream, System.IO.Stream receivingStream) -> void
StreamJsonRpc.HeaderDelimitedMessageHandler.SubType.get -> string
StreamJsonRpc.HeaderDelimitedMessageHandler.SubType.set -> void
StreamJsonRpc.JsonRpc
StreamJsonRpc.JsonRpc.Disconnected -> System.EventHandler<StreamJsonRpc.JsonRpcDisconnectedEventArgs>
StreamJsonRpc.JsonRpc.Dispose() -> void
StreamJsonRpc.JsonRpc.InvokeAsync(string targetName, params object[] arguments) -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpc.InvokeAsync<TResult>(string targetName, params object[] arguments) -> System.Threading.Tasks.Task<TResult>
StreamJsonRpc.JsonRpc.InvokeWithCancellationAsync(string targetName, System.Collections.Generic.IReadOnlyList<object> arguments = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpc.InvokeWithCancellationAsync<TResult>(string targetName, System.Collections.Generic.IReadOnlyList<object> arguments = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TResult>
StreamJsonRpc.JsonRpc.JsonRpc(System.IO.Stream sendingStream, System.IO.Stream receivingStream, object target = null) -> void
StreamJsonRpc.JsonRpc.NotifyAsync(string targetName, params object[] arguments) -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpc.StartListening() -> void
StreamJsonRpc.JsonRpcDisconnectedEventArgs
StreamJsonRpc.JsonRpcDisconnectedEventArgs.Description.get -> string
StreamJsonRpc.JsonRpcDisconnectedEventArgs.Exception.get -> System.Exception
StreamJsonRpc.JsonRpcDisconnectedEventArgs.JsonRpcDisconnectedEventArgs(string description, StreamJsonRpc.DisconnectedReason reason) -> void
StreamJsonRpc.JsonRpcDisconnectedEventArgs.JsonRpcDisconnectedEventArgs(string description, StreamJsonRpc.DisconnectedReason reason, System.Exception exception) -> void
StreamJsonRpc.JsonRpcDisconnectedEventArgs.Reason.get -> StreamJsonRpc.DisconnectedReason
StreamJsonRpc.RemoteInvocationException
StreamJsonRpc.RemoteInvocationException.RemoteInvocationException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
StreamJsonRpc.RemoteMethodNotFoundException
StreamJsonRpc.RemoteMethodNotFoundException.RemoteMethodNotFoundException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
StreamJsonRpc.RemoteMethodNotFoundException.TargetMethod.get -> string
StreamJsonRpc.RemoteRpcException
StreamJsonRpc.RemoteRpcException.RemoteRpcException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
StreamJsonRpc.RemoteRpcException.RemoteRpcException(string message) -> void
StreamJsonRpc.RemoteRpcException.RemoteRpcException(string message, System.Exception innerException) -> void
static StreamJsonRpc.JsonRpc.Attach(System.IO.Stream sendingStream, System.IO.Stream receivingStream, object target = null) -> StreamJsonRpc.JsonRpc
static StreamJsonRpc.JsonRpc.Attach(System.IO.Stream stream, object target = null) -> StreamJsonRpc.JsonRpc
virtual StreamJsonRpc.JsonRpc.Dispose(bool disposing) -> void
virtual StreamJsonRpc.JsonRpc.IsFatalException(System.Exception ex) -> bool
StreamJsonRpc.JsonRpc.NotifyAsync(string targetName, object argument) -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpc.InvokeAsync(string targetName, object argument) -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpc.InvokeAsync<TResult>(string targetName, object argument) -> System.Threading.Tasks.Task<TResult>
StreamJsonRpc.JsonRpc.InvokeWithParameterObjectAsync<TResult>(string targetName, object argument = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TResult>
StreamJsonRpc.JsonRpc.NotifyWithParameterObjectAsync(string targetName, object argument = null) -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpcMethodAttribute
StreamJsonRpc.JsonRpcMethodAttribute.JsonRpcMethodAttribute(string name) -> void
StreamJsonRpc.JsonRpcMethodAttribute.Name.get -> string
StreamJsonRpc.JsonRpc.AddLocalRpcMethod(string rpcMethodName, System.Delegate handler) -> void
StreamJsonRpc.JsonRpc.AddLocalRpcMethod(string rpcMethodName, System.Reflection.MethodInfo handler, object target) -> void
StreamJsonRpc.JsonRpc.AddLocalRpcTarget(object target) -> void
StreamJsonRpc.CommonMethodNameTransforms
StreamJsonRpc.JsonRpc.AddLocalRpcTarget(object target, StreamJsonRpc.JsonRpcTargetOptions options) -> void
StreamJsonRpc.JsonRpc.AllowModificationWhileListening.get -> bool
StreamJsonRpc.JsonRpc.AllowModificationWhileListening.set -> void
StreamJsonRpc.JsonRpc.Attach<T>() -> T
StreamJsonRpc.JsonRpc.Attach<T>(StreamJsonRpc.JsonRpcProxyOptions options) -> T
StreamJsonRpc.JsonRpc.Completion.get -> System.Threading.Tasks.Task
StreamJsonRpc.JsonRpc.SynchronizationContext.get -> System.Threading.SynchronizationContext
StreamJsonRpc.JsonRpc.SynchronizationContext.set -> void
StreamJsonRpc.JsonRpcProxyOptions
StreamJsonRpc.JsonRpcProxyOptions.JsonRpcProxyOptions() -> void
StreamJsonRpc.JsonRpcProxyOptions.EventNameTransform.get -> System.Func<string, string>
StreamJsonRpc.JsonRpcProxyOptions.EventNameTransform.set -> void
StreamJsonRpc.JsonRpcProxyOptions.MethodNameTransform.get -> System.Func<string, string>
StreamJsonRpc.JsonRpcProxyOptions.MethodNameTransform.set -> void
StreamJsonRpc.JsonRpcTargetOptions
StreamJsonRpc.JsonRpcTargetOptions.JsonRpcTargetOptions() -> void
StreamJsonRpc.JsonRpcTargetOptions.EventNameTransform.get -> System.Func<string, string>
StreamJsonRpc.JsonRpcTargetOptions.EventNameTransform.set -> void
StreamJsonRpc.JsonRpcTargetOptions.MethodNameTransform.get -> System.Func<string, string>
StreamJsonRpc.JsonRpcTargetOptions.MethodNameTransform.set -> void
StreamJsonRpc.JsonRpcTargetOptions.NotifyClientOfEvents.get -> bool
StreamJsonRpc.JsonRpcTargetOptions.NotifyClientOfEvents.set -> void
StreamJsonRpc.WebSocketMessageHandler
StreamJsonRpc.WebSocketMessageHandler.WebSocket.get -> System.Net.WebSockets.WebSocket
static StreamJsonRpc.CommonMethodNameTransforms.CamelCase.get -> System.Func<string, string>
static StreamJsonRpc.CommonMethodNameTransforms.Prepend(string prefix) -> System.Func<string, string>
static StreamJsonRpc.JsonRpc.Attach<T>(System.IO.Stream sendingStream, System.IO.Stream receivingStream) -> T
static StreamJsonRpc.JsonRpc.Attach<T>(System.IO.Stream stream) -> T
