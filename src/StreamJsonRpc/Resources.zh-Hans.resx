<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>可读内容和可写内容均为 null。</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>已获得执行“{0}”的请求，但没有回调对象。删除请求。</value>
    <comment>{0} is the method name to execute.</comment>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>写入 JSON RPC 结果 {0} 时出错：{1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>反序列化传入 JSON RPC“{0}”时失败：{1}</value>
    <comment>{0} is the JSON RPC, {1} is the exception message.</comment>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>JSON RPC 不得为 null。</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} 具有不受支持的 ref 或 out 参数</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0} 参数（排除任何 CancellationToken）：{1}，但请求提供 {2}</value>
    <comment>{0} is the method signature, {1} is the method parameter count, {2} is the request parameter count.</comment>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>{0} 参数与请求中提供的参数不兼容。</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>已达到流结尾。</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>从流读取 JSON RPC 失败，出现 {0}：{1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>响应不是错误。</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>已释放流</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>任务未完成。</value>
  </data>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>任务已取消。</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>找不到 {2} 上的方法“{0}/{1}”，原因如下：{3}</value>
    <comment>{0} is the method name, {1} is arity, {2} is target class full name, {3} is the error list.</comment>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>处理 JSON-RPC 消息时出现意外错误: {0}</value>
    <comment>{0} is the exception message.</comment>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>传入的 JSON-RPC 消息不符合已识别的模式。</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>无法将内容长度标头分析为一个正整数。</value>
    <comment>{locked="Content-Length"}</comment>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>邮件标头的大小超出了支持的最大大小。</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>分析标头时出现意外标记“{0}”。</value>
    <comment>{0} is the token, which is typically a single character.</comment>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>必须提供一个正整数。</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>缓冲区为空。请先调用异步方法进行填充。</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>必须提供一个非负整数。</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>{0} 和 {1} 参数超出了数组的长度。</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>流必须可读。</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>流必须可写。</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>启动消息侦听后不允许此操作。</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>启动消息侦听前不允许此操作。</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>参数不是单对象的形式</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>“{0}”方法的所有重载和重写必须共享 {1}.{2} 的常见值。</value>
    <comment>{0} is the method name, {1} is the attribute name, {2} is the attribute property name.</comment>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>.NET 方法“{0}”和“{1}”不能映射到同一请求方法名“{2}”。</value>
    <comment>{0} is the first method name, {1} is the second method name, {2} is the attribute property value.</comment>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>找不到名为“{0}”的方法。</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>已注册了具有相同名称和等效参数的方法。</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>当且仅当方法不是静态时，才提供目标对象。</value>
    <comment>"static" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>必须先开始侦听。</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>侦听开始后，无法完成此操作。</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>服务器方法 {0} 引发了严重的异常: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message</comment>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>“{0}”上不支持的事件处理程序类型。仅支持 EventHandler 和 EventHandler&lt;T&gt;。</value>
    <comment>{0} is a type and member name.</comment>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>不支持泛型方法。</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>方法“{0}”具有不支持的返回类型“{1}”。只支持返回任务的方法。</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>服务接口不支持属性。</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>“{0}”不是接口。</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>不支持文本编码，因为格式化程序“{0}”未实现“{1}”。</value>
    <comment>{0} and {1} are CLR type names.</comment>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>在请求完成之前, 与远程方的 JSON-RPC 连接已丢失。</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>没有为所需参数提供参数。</value>
  </data>
</root>