<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>Parametr readable i writable jsou null.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Byla přijata žádost o provedení {0}, ale chybí objekt zpětného volání. Žádost se ruší.</value>
    <comment>{0} is the method name to execute.</comment>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Chyba při zápisu výsledku JSON RPC: {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Selhání při deserializaci příchozího JSON RPC: {0}: {1}</value>
    <comment>{0} is the JSON RPC, {1} is the exception message.</comment>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>JSON RPC nesmí být null.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} má parametry ref nebo out, což se nepodporuje.</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>Parametry {0} (vyjma jakýchkoli objektů CancellationToken): {1}, ale žádost poskytuje {2}.</value>
    <comment>{0} is the method signature, {1} is the method parameter count, {2} is the request parameter count.</comment>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Parametry {0} nejsou kompatibilní s žádostí: {1}.</value>
    <comment>{0} is the method signature, {1} is the error message.</comment>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Bylo dosaženo konce streamu.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Čtení RPC JSON ze streamu se nezdařilo s {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>Odpověď není chyba.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Stream byl vyřazen.</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>Úloha není dokončena.</value>
  </data>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>Úloha byla zrušena.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>Nebyla nalezena metoda {0}/{1} v {2} z následujících důvodů: {3}</value>
    <comment>{0} is the method name, {1} is arity, {2} is target class full name, {3} is the error list.</comment>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Neočekávaná chyba při zpracování JSON RPC {0}: {1}</value>
    <comment>{0} is the json, {1} is the exception message.</comment>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>Nerozpoznané příchozí JSON RPC {0}</value>
    <comment>{0} is the json.</comment>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Selhalo zparsování hlavičky Content-Length na kladné celé číslo.</value>
    <comment>{locked="Content-Length"}</comment>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>Velikost hlavičky zprávy překračuje maximální podporovanou velikost.</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Neočekávaný token {0} při parsování hlavičky</value>
    <comment>{0} is the token, which is typically a single character.</comment>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Je vyžadováno kladné celé číslo.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>Vyrovnávací paměť je prázdná. Nejdříve ji naplňte, a to zavoláním asynchronní metody.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Je vyžadováno nezáporné celé číslo.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Parametry {0] a {1} překračují délku pole.</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>Ze streamu musí být možné číst.</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>Do streamu musí být možné zapisovat.</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Po zahájení naslouchání zprávám není tato operace povolená.</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Před zahájením naslouchání zprávám není tato operace povolená.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>Parametr není ve formě jednoho objektu</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Všechna přetížení a přepisy metody {0} musí mít společnou hodnotu pro {1}.{2}.</value>
    <comment>{0} is the method name, {1} is the attribute name, {2} is the attribute property name.</comment>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Metody .NET {0} i {1} se nemůžou současně mapovat ke stejnému názvu metody žádosti: {2}.</value>
    <comment>{0} is the first method name, {1} is the second method name, {2} is the attribute property value.</comment>
  </data>
</root>