<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>"readable" und "writable" sind NULL.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Eine Anforderung zum Ausführen von "{0}" wurde ausgegeben, es ist aber kein Rückrufobjekt vorhanden. Die Anforderung wird gelöscht.</value>
    <comment>{0} is the method name to execute.</comment>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Fehler beim Schreiben des JSON-RPC-Ergebnisses: {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Fehler beim Deserialisieren des eingehenden JSON-RPC "{0}": {1}</value>
    <comment>{0} is the JSON RPC, {1} is the exception message.</comment>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>Der JSON-RPC darf nicht NULL sein.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>"{0}" weist ref- oder out-Parameter auf. Dies wird nicht unterstützt</value>
    <comment>{0} is the method signature.</comment>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0}-Parameter (ausschließlich CancellationToken): {1}, die Anforderung stellt aber {2} bereit.</value>
    <comment>{0} is the method signature, {1} is the method parameter count, {2} is the request parameter count.</comment>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>{0} Parameter sind nicht kompatibel mit der Anforderung: {1}</value>
    <comment>{0} is the method signature, {1} is the error message.</comment>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Das Ende des Datenstroms wurde erreicht.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Fehler beim Lesen des JSON-RPC aus dem Datenstrom mit {0}: {1}</value>
    <comment>{0} is the exception type, {1} is the exception message.</comment>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>Die Antwort ist kein Fehler.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Der Datenstrom wurde verworfen.</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>Der Task ist nicht abgeschlossen.</value>
  </data>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>Der Task wurde abgebrochen.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>Die Methode "{0}/{1}" für "{2}" wurde aus den folgenden Gründen nicht gefunden: {3}</value>
    <comment>{0} is the method name, {1} is arity, {2} is target class full name, {3} is the error list.</comment>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Unerwarteter Fehler beim Verarbeiten des JSON-RPC "{0}": {1}</value>
    <comment>{0} is the json, {1} is the exception message.</comment>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>Nicht erkannter eingehender JSON-RPC "{0}".</value>
    <comment>{0} is the json.</comment>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Fehler beim Analysieren des Content-Length-Headers in einen positiven Integerwert.</value>
    <comment>{locked="Content-Length"}</comment>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>Die Größe der Nachrichtenheaders überschreitet die maximal unterstützte Größe.</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Unerwartetes Token "{0}" beim Analysieren des Headers.</value>
    <comment>{0} is the token, which is typically a single character.</comment>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Ein positiver Integerwert ist erforderlich.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>Der Puffer ist leer. Rufen Sie die asynchrone Methode auf, um ihn zuerst mit Daten aufzufüllen.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Ein nicht negativer Integerwert ist erforderlich.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Die Parameter {0] und {1} überschreiten die Länge des Arrays.</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>Der Datenstrom muss lesbar sein.</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>In den Datenstrom muss geschrieben werden können.</value>
    <comment>An error message when a stream passed in as an argument is incorrect.</comment>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Dieser Vorgang ist unzulässig, nachdem das Lauschen auf Nachrichten gestartet wurde.</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Dieser Vorgang ist unzulässig, bevor das Lauschen auf Nachrichten gestartet wurde.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>Der Parameter liegt nicht im Format eines einzelnen Objekts vor.</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Alle Überladungen und Überschreibungen der Methode "{0}" müssen einen gemeinsamen Wert für {1} aufweisen.{2}.</value>
    <comment>{0} is the method name, {1} is the attribute name, {2} is the attribute property name.</comment>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Die .NET-Methoden "{0}" und "{1}" können nicht beide dem gleichen Anforderungsmethodennamen zugeordnet werden: "{2}".</value>
    <comment>{0} is the first method name, {1} is the second method name, {2} is the attribute property value.</comment>
  </data>
</root>